read.table(file = "C:/Users/user/Desktop/DISEASE-ALLIANCE_MGI.tsv/DISEASE-ALLIANCE_MGI.tsv", sep = '\t', header = TRUE)
read.table(file = "C:/Users/user/Desktop/di.tsv", sep = '\t', header = TRUE)
read.table(file = "C:/Users/user/Desktop/di.tsv", sep = "\t", header = TRUE)
read.delim(file = "C:/Users/user/Desktop/di.tsv")
di <- read.delim(file = "C:/Users/user/Desktop/di.tsv")
di
View(di)
View(di)
di <- read.delim(file = "C:/Users/user/Desktop/di.tsv", sep = '\t', header = TRUE)
di
View(di)
View(di)
di <- read.delim2 (file = "C:/Users/user/Desktop/di.tsv", sep = '\t', header = TRUE)
di
di <- read.delim2 (file = "C:/Users/user/Desktop/di.tsv", sep = '\t', header = TRUE)
di
mi <- read.csv("C:/Users/user/Desktop/di.tsv", sep = "\t")
mi
View(mi)
di <- read.delim2 (file = "C:/Users/user/Desktop/di.tsv", sep = "\t", header = TRUE)
di
mi <- read.csv("C:/Users/user/Desktop/di.tsv", sep = "\t")
View(mi)
di <- read.delim("C:/Users/user/Desktop/di.tsv", comment.char="#")
View(di)
View(di)
View(di)
install.packages("shiny")
runExample("01_hello")
library(shiny)
runExample("01_hello")
library(bslib)
# Define UI for app that draws a histogram ----
ui <- page_sidebar(
# App title ----
title = "Hello Shiny!",
# Sidebar panel for inputs ----
sidebar = sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30
)
),
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
runExample("01_hello")
library(bslib)
# Define UI for app that draws a histogram ----
ui <- page_sidebar(
# App title ----
title = "Hello Shiny!",
# Sidebar panel for inputs ----
sidebar = sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30
)
),
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
runApp("my_app")
rlang::last_trace()
output$corrplot <- renderPlotly((
g <- DataExplorer::plot_correlation( rv$data_set)
plotly::ggplotly(g)
library(shiny)
library(bslib)
library(modeldata)
library(DataExplorer)
library(plotly)
library(tidyverse)
utils::data("stackoverflow", "car_prices", "Sacramento", package="modeldata")
data_list = list (
"Stackoverflow"= stackoverflow,
"Car Prices" = car_prices,
"Sacramento Housing" = Sacramento
)
ui <- navbarPage(
title = "Data Explorer",
theme = bslib::bs_theme(version=4, bottswatch= "minty"),
tabPanel(
title= "Explore",
sidebarPanel(
width=3,
h1("Explorer a Dataset"),
shiny::selectInput(
inputID ="dataset_choice",
label="Data Connection",
choices = c("Stackoverflow", "Car Prices","Sacramento Housing"),
hr(),
h3("Apps by Business Science"),
p("Go from beginner to building full-stack shiny apps"),
p("Learn Shiny Today")%>%
a(
href ='https://www.business-science.io/',
target = "_blank",
class= "btn tn-lg bth-primary"
) %>%
div(class= "text-center")
),
mainPanel(
h1("Correlation"),
plotlyOutput("corrplot", height=700)
)
)
)
)
library(shiny)
library(bslib)
library(modeldata)
library(DataExplorer)
library(plotly)
library(tidyverse)
utils::data("stackoverflow", "car_prices", "Sacramento", package="modeldata")
data_list = list (
"Stackoverflow"= stackoverflow,
"Car Prices" = car_prices,
"Sacramento Housing" = Sacramento
)
ui <- navbarPage(
title = "Data Explorer",
theme = bslib::bs_theme(version=4, bottswatch= "minty"),
tabPanel(
title= "Explore",
sidebarPanel(
width=3,
h1("Explorer a Dataset"),
shiny::selectInput(
inputID ="dataset_choice",
label="Data Connection",
choices = c("Stackoverflow", "Car Prices","Sacramento Housing"),
hr(),
h3("Apps by Business Science"),
p("Go from beginner to building full-stack shiny apps"),
p("Learn Shiny Today")%>%
a(
href ='https://www.business-science.io/',
target = "_blank",
class= "btn tn-lg bth-primary"
) %>%
div(class= "text-center")
),
mainPanel(
h1("Correlation"),
plotlyOutput("corrplot", height=700)
)
)
)
)
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
runApp('D:/Graduate Courses/Datasets & Helpful/R Shiny Practice.R')
library(shiny); runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
rsconnect::deployApp()
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
setwd("D:/Graduate Courses/PHPH 7990/App")
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='your_actual_secret_here')  # not <SECRET>
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
library(shiny); runApp('D:/Graduate Courses/PHPH 7990/Data/R/additional shiny.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/icpsr_1.R')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='your_actual_secret_here')  # not <SECRET>
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='<SECRET>')
library(rsconnect)
rsconnect::deployApp('D:\Graduate Courses\PHPH 7990\Data\R')
library(rsconnect)
rsconnect::deployApp('D:/Graduate Courses/PHPH 7990/Data/R')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='<SECRET>')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='rEo5LU2MMGkZzsmybWs+XO0BLwDRDY6V4ic33IkY')
rsconnect::deployApp('D:/Graduate Courses/PHPH 7990/Data/R')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='rEo5LU2MMGkZzsmybWs+XO0BLwDRDY6V4ic33IkY')
rsconnect::deployApp('D:/Graduate Courses/PHPH 7990/Data/R/Shiny_tpb')
library(shiny); runApp('D:/Graduate Courses/PHPH 7990/Data/R/Constructs with Demographics.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/Constructs with Demographics.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/Constructs with Demographics.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/Constructs with Demographics.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/Constructs with Demographics.R')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='rEo5LU2MMGkZzsmybWs+XO0BLwDRDY6V4ic33IkY')
rsconnect::deployApp('D:/Graduate Courses/PHPH 7990/Data/R/TPB_ShinyApp')
runApp('D:/Graduate Courses/PHPH 7990/Data/R/app.R')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='rEo5LU2MMGkZzsmybWs+XO0BLwDRDY6V4ic33IkY')
rsconnect::deployApp('D:/Graduate Courses/PHPH 7990/Data/R')
wheader_17 <- read.csv("D:/Graduate Courses/PHPH 7990/Data/SAS/wheader_12.csv", header=FALSE)
View(wheader_17)
data[all_indicators] <- lapply(data[all_indicators], function(x) {
x[x %in% c(-8, -9, 8)] <- NA
factor(x)
})
library(tidyverse)
library(conflicted)
data <- read.csv("D:/Graduate Courses/PHPH 7990/Data/SAS/wheader_17.csv", stringsAsFactors = FALSE)
# Clean plh1/plh2 and create merged variable
data$plh1 <- as.numeric(as.character(data$plh1))
data$plh2 <- as.numeric(as.character(data$plh2))
data$plh1[data$plh1 == -9] <- NA
data$plh2[data$plh2 == -9] <- NA
data$plh <- case_when(
data$plh1 == 1 & data$plh2 == 0 ~ "Father Present",
data$plh1 == 0 & data$plh2 == 1 ~ "Mother Present",
data$plh1 == 1 & data$plh2 == 1 ~ "Both Parents Present",
data$plh1 == 0 & data$plh2 == 0 ~ "None Present",
TRUE ~ NA_character_
)
data$plh <- factor(data$plh, levels = c("Both Parents Present", "Mother Present", "Father Present", "None Present"))
# Proportion of smokers by parental presence
smk_prop <- data %>%
filter(!is.na(smk) & !is.na(plh)) %>%
group_by(plh) %>%
summarise(
count = n(),
smokers = sum(smk == 1),
percent_smk = smokers / count
)
conflicted::conflicts_prefer(dplyr::filter)
library(tidyverse)
library(conflicted)
data <- read.csv("D:/Graduate Courses/PHPH 7990/Data/SAS/wheader_17.csv", stringsAsFactors = FALSE)
# Clean plh1/plh2 and create merged variable
data$plh1 <- as.numeric(as.character(data$plh1))
data$plh2 <- as.numeric(as.character(data$plh2))
data$plh1[data$plh1 == -9] <- NA
data$plh2[data$plh2 == -9] <- NA
data$plh <- case_when(
data$plh1 == 1 & data$plh2 == 0 ~ "Father Present",
data$plh1 == 0 & data$plh2 == 1 ~ "Mother Present",
data$plh1 == 1 & data$plh2 == 1 ~ "Both Parents Present",
data$plh1 == 0 & data$plh2 == 0 ~ "None Present",
TRUE ~ NA_character_
)
data$plh <- factor(data$plh, levels = c("Both Parents Present", "Mother Present", "Father Present", "None Present"))
# Proportion of smokers by parental presence
smk_prop <- data %>%
filter(!is.na(smk) & !is.na(plh)) %>%
group_by(plh) %>%
summarise(
count = n(),
smokers = sum(smk == 1),
percent_smk = smokers / count
)
# Custom color palette (blue, red, orange shades)
custom_colors <- c(
"Both Parents Present" = "#4A90E2",   # soft blue
"Mother Present"       = "#F5A623",   # orange
"Father Present"       = "#D0021B",   # red
"None Present"         = "#D81B60"    # magenta
)
# Plot with custom fill
ggplot(smk_prop, aes(x = plh, y = percent_smk, fill = plh)) +
geom_col() +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "Smoking Prevalence by Parental Presence",
x = "Parental Presence", y = "Percentage of Smokers",
fill = "Parental Status"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggsave("D:/Graduate Courses/PHPH 7990/Data/RStudio/smk_plh_17.png", width = 8, height = 5, dpi = 300, bg = "white")
library(shiny); runApp('D:/Graduate Courses/PHPH 7990/Data/RStudio/app_17.R')
runApp('D:/Graduate Courses/PHPH 7990/Data/RStudio/app_17.R')
library(tidyverse)
library(conflicted)
data <- read.csv("D:/Graduate Courses/PHPH 7990/Data/SAS/wheader_18.csv", stringsAsFactors = FALSE)
# Clean plh1/plh2 and create merged variable
data$plh1 <- as.numeric(as.character(data$plh1))
data$plh2 <- as.numeric(as.character(data$plh2))
data$plh1[data$plh1 == -9] <- NA
data$plh2[data$plh2 == -9] <- NA
data$plh <- case_when(
data$plh1 == 1 & data$plh2 == 0 ~ "Father Present",
data$plh1 == 0 & data$plh2 == 1 ~ "Mother Present",
data$plh1 == 1 & data$plh2 == 1 ~ "Both Parents Present",
data$plh1 == 0 & data$plh2 == 0 ~ "None Present",
TRUE ~ NA_character_
)
data$plh <- factor(data$plh, levels = c("Both Parents Present", "Mother Present", "Father Present", "None Present"))
# Proportion of smokers by parental presence
smk_prop <- data %>%
filter(!is.na(smk) & !is.na(plh)) %>%
group_by(plh) %>%
summarise(
count = n(),
smokers = sum(smk == 1),
percent_smk = smokers / count
)
# Custom color palette (blue, red, orange shades)
custom_colors <- c(
"Both Parents Present" = "#4A90E2",   # soft blue
"Mother Present"       = "#F5A623",   # orange
"Father Present"       = "#D0021B",   # red
"None Present"         = "#D81B60"    # magenta
)
# Plot with custom fill
ggplot(smk_prop, aes(x = plh, y = percent_smk, fill = plh)) +
geom_col() +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "Smoking Prevalence by Parental Presence",
x = "Parental Presence", y = "Percentage of Smokers",
fill = "Parental Status"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggsave("D:/Graduate Courses/PHPH 7990/Data/RStudio/smk_plh_18.png", width = 8, height = 5, dpi = 300, bg = "white")
runApp('D:/Graduate Courses/PHPH 7990/Data/RStudio/app_18.R')
library(tidyverse)
library(conflicted)
data <- read.csv("D:/Graduate Courses/PHPH 7990/Data/SAS/wheader_19.csv", stringsAsFactors = FALSE)
# Clean plh1/plh2 and create merged variable
data$plh1 <- as.numeric(as.character(data$plh1))
data$plh2 <- as.numeric(as.character(data$plh2))
data$plh1[data$plh1 == -9] <- NA
data$plh2[data$plh2 == -9] <- NA
data$plh <- case_when(
data$plh1 == 1 & data$plh2 == 0 ~ "Father Present",
data$plh1 == 0 & data$plh2 == 1 ~ "Mother Present",
data$plh1 == 1 & data$plh2 == 1 ~ "Both Parents Present",
data$plh1 == 0 & data$plh2 == 0 ~ "None Present",
TRUE ~ NA_character_
)
data$plh <- factor(data$plh, levels = c("Both Parents Present", "Mother Present", "Father Present", "None Present"))
# Proportion of smokers by parental presence
smk_prop <- data %>%
filter(!is.na(smk) & !is.na(plh)) %>%
group_by(plh) %>%
summarise(
count = n(),
smokers = sum(smk == 1),
percent_smk = smokers / count
)
# Custom color palette (blue, red, orange shades)
custom_colors <- c(
"Both Parents Present" = "#4A90E2",   # soft blue
"Mother Present"       = "#F5A623",   # orange
"Father Present"       = "#D0021B",   # red
"None Present"         = "#D81B60"    # magenta
)
# Plot with custom fill
ggplot(smk_prop, aes(x = plh, y = percent_smk, fill = plh)) +
geom_col() +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "Smoking Prevalence by Parental Presence",
x = "Parental Presence", y = "Percentage of Smokers",
fill = "Parental Status"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggsave("D:/Graduate Courses/PHPH 7990/Data/RStudio/smk_plh_19.png", width = 8, height = 5, dpi = 300, bg = "white")
runApp('D:/Graduate Courses/PHPH 7990/Data/RStudio/app_19.R')
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='rEo5LU2MMGkZzsmybWs+XO0BLwDRDY6V4ic33IkY')
rsconnect::deployApp('D:/Graduate Courses/PHPH 7990/Data/RStudio')
rlang::last_trace()
library(rsconnect)
rsconnect::setAccountInfo(name='mye-chow',
token='6336D3DD27A7868E9A8A8D3F7B4AF445',
secret='rEo5LU2MMGkZzsmybWs+XO0BLwDRDY6V4ic33IkY')
rsconnect::deployApp('D:/Graduate Courses/PHPH 7990/Data/RStudio')
runApp('D:/Graduate Courses/PHPH 7990/Data/RStudio/app_17.R')
data$plh <- case_when(
data$plh1 == 1 & data$plh2 == 0 ~ "Father Present",
data$plh1 == 0 & data$plh2 == 1 ~ "Mother Present",
data$plh1 == 1 & data$plh2 == 1 ~ "Both Parents Present",
data$plh1 == 0 & data$plh2 == 0 ~ "None Present",
TRUE ~ NA_character_
)
library(tidyverse)
library(conflicted)
data <- read.csv("D:/Graduate Courses/PHPH 7990/Data/RStudio/wheader_17.csv", stringsAsFactors = FALSE)
# Clean plh1/plh2 and create merged variable
data$plh1 <- as.numeric(as.character(data$plh1))
data$plh2 <- as.numeric(as.character(data$plh2))
data$plh1[data$plh1 == -9] <- NA
data$plh2[data$plh2 == -9] <- NA
data$plh <- case_when(
data$plh1 == 1 & data$plh2 == 0 ~ "Father Present",
data$plh1 == 0 & data$plh2 == 1 ~ "Mother Present",
data$plh1 == 1 & data$plh2 == 1 ~ "Both Parents Present",
data$plh1 == 0 & data$plh2 == 0 ~ "None Present",
TRUE ~ NA_character_
)
data$plh <- factor(data$plh, levels = c("Both Parents Present", "Mother Present", "Father Present", "None Present"))
# Proportion of smokers by parental presence
smk_prop <- data %>%
filter(!is.na(smk) & !is.na(plh)) %>%
group_by(plh) %>%
summarise(
count = n(),
smokers = sum(smk == 1),
percent_smk = smokers / count
)
# Custom color palette (blue, red, orange shades)
custom_colors <- c(
"Both Parents Present" = "#4A90E2",   # soft blue
"Mother Present"       = "#F5A623",   # orange
"Father Present"       = "#D0021B",   # red
"None Present"         = "#D81B60"    # magenta
)
# Plot with custom fill
ggplot(smk_prop, aes(x = plh, y = percent_smk, fill = plh)) +
geom_col() +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "Smoking Prevalence by Parental Presence",
x = "Parental Presence", y = "Percentage of Smokers",
fill = "Parental Status"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggsave("D:/Graduate Courses/PHPH 7990/Data/RStudio/smk_plh_17.png", width = 8, height = 5, dpi = 300, bg = "white")
runApp('D:/Graduate Courses/PHPH 7990/Data/RStudio/app_17.R')
shiny::runApp('D:/Graduate Courses/PHPH 7990/Data/RStudio')
install.packages("usethis")
usethis::use_git()
usethis::use_git()
usethis::use_git()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
View(smk_prop)
quarto::quarto_render()
set wd "C:\Users\user\myechow"
setwd("C:/Users/user/myechow")
setwd("C:/Users/user/myechow")
setwd("C:/Users/user/myechow")
